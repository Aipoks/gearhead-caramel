*NEW SCENE_FEATURE
    "name": "Add Entry Effect",
    "display_name": "Entry Effect",
    "desc": "Adds a method to run effects when this scene is entered.",
    "sorting_rank": 1000,
    "child_types": ["EFFECT"],
    "category": "On Entry",
    "singular": true,
    "needs_children": true

*SCRIPT plot_methods
def LOCALE_ENTER(self, camp):
    #: effect



*NEW SCENE_FEATURE
    "name": "Add Terrain Set Decor",
    "display_name": "TerrSet: {decor}",
    "desc": "Adds a multi-tile decorative feature to this scene",
    "sorting_rank": 1000,
    "vars": {
      "decor": {"default_val": "ghterrain.CorsairTerrset", "var_type": "terrain_set"}
    }

*SCRIPT plot_init
self.elements["LOCALE"].contents.append({decor}())



*NEW SCENE_FEATURE
    "name": "New Room",
    "display_name": "Room: {room_name}",
    "desc": "Adds a room to this scene. Note that in GHC, a room can be any rectangular area of the map.",
    "is_new_branch": true,
    "vars": {
      "room_name": {"default_val": "", "var_type": "literal"},
      "room": {"default_val": "pbge.randmaps.rooms.FuzzyRoom", "var_type": "room"},
      "anchor": {"default_val": "None", "var_type": "map_anchor"},
      "decor": {"default_val": "None", "var_type": "interior_decor"}
    },
    "child_types": ["ROOM_FEATURE"],
    "elements": {
      "ROOM": {"e_type": "room", "name": "Room: {room_name}", "child_types": ["ROOM_FEATURE"]}
          },
    "physicals": [
        {"element_key": "ROOM", "parent": "LOCALE", "child_types": ["ROOM_FEATURE"]}
    ],
    "sorting_rank": 1000,
    "category": "ROOMS"

*SCRIPT plot_subplots
+subplot ROOM_{unique_id}_{_uid}

*SCRIPT main
class Room_{unique_id}_{_uid}( Plot ):
    LABEL = "ROOM_{unique_id}_{_uid}"
    active = True
    scope = "LOCALE"

    #: plot_properties

    def custom_init( self, nart ):
        +init_plot
        #: plot_init
        #: plot_actions
        #: plot_subplots
        return True

    #: plot_methods

*SCRIPT scenario_build
the_world[{ROOM_UID}] = {room}(name={room_name}, anchor={anchor}, decorate={decor})
the_world[{LOCALE_UID}].contents.append(the_world[{ROOM_UID}])



*NEW SCENE_FEATURE
    "name": "New Singular Dungeon Level",
    "display_name": "Level: {dg_name}",
    "desc": "Adds a signular dungeon level.",
    "is_new_branch": true,
    "vars": {
      "dg_name": {"default_val": "", "var_type": "literal"},
      "dg_architecture": {"default_val": "gharchitecture.StoneCave", "var_type": "personal_scale_architecture", "must_be_defined": true},
      "dg_scene_tags": {"default_val": ["gears.tags.SCENE_DUNGEON"], "var_type": "scene_tags"},
      "dg_monster_tags": {"default_val": ["ANIMAL"], "var_type": "list:monster_tags"},
      "dg_explo_music": {"default_val":  "Good Night.ogg", "var_type": "music"},
      "dg_combat_music": {"default_val":  "Apex.ogg", "var_type": "music"},
      "dg_decor": {"default_val": "None", "var_type": "interior_decor"},
      "rank_modifier": {"default_val": 0, "var_type": "integer"},
      "scene_connection": {"default_val": null, "var_type": "scene_connection"}
    },
    "child_types": ["SCENE_FEATURE", "DUNGEON_SCENE_FEATURE"],
    "elements": {
      "LOCALE": {"e_type": "scene", "name": "Level: {dg_name}", "aliases": ["PARENT_SCENE"]}
    },
    "physicals": [
        {"element_key": "LOCALE", "parent": "PARENT_SCENE", "child_types": ["SCENE_FEATURE", "DUNGEON_SCENE_FEATURE"]}
    ]

*SCRIPT plot_subplots
+subplot DUNGEONLEVEL_{unique_id}_{_uid}

*SCRIPT main
class DungeonLevel_{unique_id}_{_uid}( Plot ):
    LABEL = "DUNGEONLEVEL_{unique_id}_{_uid}"
    active = True
    scope = "LOCALE"

    #: plot_properties

    def custom_init( self, nart ):
        +init_plot
        self.elements[dungeonmaker.DG_ARCHITECTURE] = nart.get_map_generator(self.elements["LOCALE"]).archi
        self.elements[dungeonmaker.DG_NAME] = {dg_name}
        self.elements[dungeonmaker.DG_SCENE_TAGS] = {dg_scene_tags}
        self.elements[dungeonmaker.DG_MONSTER_TAGS] = {dg_monster_tags}
`
        # Do the connection here.
        #scutils.SCSceneConnection(self.elements["PARENT_SCENE"], self.elements["LOCALE"], {scene_connection})
        #: plot_init
        #: plot_actions
        #: plot_subplots
        return True

    #: plot_methods

*SCRIPT scenario_build
splot = self.add_sub_plot(nart, "DUNGEON_GENERIC", elements=dict(METROSCENE=the_world[{METROSCENE_UID}], METRO=the_world[{METROSCENE_UID}].metrodat, MISSION_GATE=the_world[{MISSION_GATE_UID}], DG_NAME={dg_name}, DG_ARCHITECTURE={dg_architecture}(), DG_SCENE_TAGS={dg_scene_tags}, DG_MONSTER_TAGS={dg_monster_tags}, DG_PARENT_SCENE=the_world[{PARENT_SCENE_UID}], DG_EXPLO_MUSIC={dg_explo_music}, DG_COMBAT_MUSIC={dg_combat_music}, DG_DECOR={dg_decor}), rank=self.rank+{rank_modifier})
+add_physical LOCALE splot.elements["LOCALE"]
scutils.SCSceneConnection(the_world[{PARENT_SCENE_UID}], splot.elements["LOCALE"], {scene_connection})



*NEW SCENE_FEATURE
    "name": "New Dungeon",
    "display_name": "Dungeon: {dg_name}",
    "desc": "Adds a complete dungeon.",
    "is_new_branch": true,
    "vars": {
      "dg_name": {"default_val": "", "var_type": "literal"},
      "dg_architecture": {"default_val": "gharchitecture.StoneCave", "var_type": "personal_scale_architecture", "must_be_defined": true},
      "dg_scene_tags": {"default_val": ["gears.tags.SCENE_DUNGEON"], "var_type": "scene_tags"},
      "dg_monster_tags": {"default_val": ["ANIMAL"], "var_type": "list:monster_tags"},
      "dg_explo_music": {"default_val":  "Good Night.ogg", "var_type": "music"},
      "dg_combat_music": {"default_val":  "Apex.ogg", "var_type": "music"},
      "dg_decor": {"default_val": "None", "var_type": "interior_decor"},
      "scene_connection": {"default_val": null, "var_type": "scene_connection"}
    },
    "child_types": ["DUNGEON_FEATURE"],
    "elements": {
      "DUNGEON": {"e_type": "dungeon", "name": "{dg_name}"}
    },
    "physicals": [
        {"element_key": "DUNGEON", "parent": "PARENT_SCENE", "variable_keys": ["dg_name", "dg_architecture", "dg_scene_tags", "dg_monster_tags", "dg_explo_music", "dg_combat_music", "dg_decor", "scene_connection"], "child_types": ["DUNGEON_FEATURE"]}
    ]

*SCRIPT plot_subplots
+subplot DUNGEON_{unique_id}_{_uid}

*SCRIPT main
class Dungeon_{unique_id}_{_uid}( Plot ):
    LABEL = "DUNGEON_{unique_id}_{_uid}"
    active = True
    scope = "METRO"

    #: plot_properties

    def custom_init( self, nart ):
        +init_plot
        self.elements[dungeonmaker.DG_ARCHITECTURE] = nart.get_map_generator(self.elements["LOCALE"]).archi
        self.elements[dungeonmaker.DG_NAME] = {dg_name}
        self.elements[dungeonmaker.DG_SCENE_TAGS] = {dg_scene_tags}
        self.elements[dungeonmaker.DG_MONSTER_TAGS] = {dg_monster_tags}
        #: plot_init
        #: plot_actions
        #: plot_subplots
        return True

    #: plot_methods

*SCRIPT scenario_build
mydungeon = dungeonmaker.DungeonMaker(nart, self, name={dg_name}, architecture={dg_architecture}(), rank=self.rank, scene_tags={dg_scene_tags}, monster_tags={dg_monster_tags}, parent_scene=the_world[{PARENT_SCENE_UID}], explo_music={dg_explo_music}, combat_music={dg_combat_music}, decor={dg_decor})
+add_physical DUNGEON mydungeon
scutils.SCSceneConnection(the_world[{PARENT_SCENE_UID}], mydungeon.entry_level, {scene_connection})



*NEW SCENE_FEATURE
"name": "Add Custom Local Subplot",
"display_name": "Subplot {subplot_name}",
"desc": "Adds a subplot from the content library to this plot. Caution: only use this if you're familiar with the content library!",
"vars": {
  "subplot_name": {
    "var_type": "literal",
    "default_val": ""
  }
},
"sorting_rank": 2000,
"category": "SUBPLOTS"

*SCRIPT plot_subplots
self.add_sub_plot(nart, {subplot_name})



*NEW DUNGEON_FEATURE
    "name": "Add Entry Level Features",
    "display_name": "Entry: {dg_name}",
    "desc": "Allows you to add features to the entry level.",
    "is_new_branch": true,
    "child_types": ["SCENE_FEATURE", "DUNGEON_SCENE_FEATURE"],
    "elements": {
      "LOCALE": {"e_type": "scene", "name": "Entry: {dg_name}", "aliases": ["PARENT_SCENE"]}
    },
    "singular": true,
    "physicals": [
        {"element_key": "LOCALE", "parent": "DUNGEON", "child_types": ["SCENE_FEATURE", "DUNGEON_SCENE_FEATURE"]}
    ]

*SCRIPT plot_subplots
+subplot DUNGEON_ENTRY_{unique_id}_{_uid}

*SCRIPT main
class DungeonEntry_{unique_id}_{_uid}( Plot ):
    LABEL = "DUNGEON_ENTRY_{unique_id}_{_uid}"
    active = True
    scope = "LOCALE"

    #: plot_properties

    def custom_init( self, nart ):
        +init_plot
        #: plot_init
        #: plot_actions
        #: plot_subplots
        return True

    #: plot_methods

*SCRIPT scenario_build
+add_physical LOCALE the_world[{DUNGEON_UID}].entry_level



*NEW DUNGEON_FEATURE
    "name": "Add Goal Level Features",
    "display_name": "Goal: {dg_name}",
    "desc": "Allows you to add features to the goal level.",
    "is_new_branch": true,
    "child_types": ["SCENE_FEATURE", "DUNGEON_SCENE_FEATURE"],
    "elements": {
      "LOCALE": {"e_type": "scene", "name": "Goal: {dg_name}", "aliases": ["PARENT_SCENE"]}
    },
    "singular": true,
    "physicals": [
        {"element_key": "LOCALE", "parent": "DUNGEON", "child_types": ["SCENE_FEATURE", "DUNGEON_SCENE_FEATURE"]}
    ]

*SCRIPT plot_subplots
+subplot DUNGEON_GOAL_{unique_id}_{_uid}

*SCRIPT main
class DungeonGoal_{unique_id}_{_uid}( Plot ):
    LABEL = "DUNGEON_GOAL_{unique_id}_{_uid}"
    active = True
    scope = "LOCALE"

    #: plot_properties

    def custom_init( self, nart ):
        +init_plot
        #: plot_init
        #: plot_actions
        #: plot_subplots
        return True

    #: plot_methods

*SCRIPT scenario_build
+add_physical LOCALE the_world[{DUNGEON_UID}].goal_level


*NEW DUNGEON_SCENE_FEATURE
"name": "Add Dungeon Treasure",
"display_name": "Dungeon Treasure",
"desc": "Add treasure to this dungeon level.",
"sorting_rank": 2000,
"category": "SUBPLOTS"

*SCRIPT plot_subplots
+subplot DUNGEON_TREASURE



