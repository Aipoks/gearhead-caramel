[
  {
    "label": "EFFECT",
    "scripts": {
      "effect": "pbge.alert({message})\n\n\n\n"
    },
    "name": "Alert Message",
    "display_name": "Alert: {message}",
    "vars": {
      "message": {
        "default_val": "Blah bla blah.",
        "var_type": "text"
      }
    },
    "sorting_rank": 4000
  },
  {
    "label": "EFFECT",
    "scripts": {
      "plot_actions": "self.one_time_effect_{_uid}_ready = True\n\n",
      "effect": "if self.one_time_effect_{_uid}_ready:\n    #: effect\n    self.one_time_effect_{_uid}_ready = False\n\n\n\n"
    },
    "name": "One Time Effect",
    "display_name": "Once...",
    "desc": "Add an effect that will only happen once.",
    "child_types": [
      "EFFECT"
    ],
    "needs_children": true
  },
  {
    "label": "EFFECT",
    "scripts": {
      "effect": "if {conditions}:\n    #: effect\n#: elif\n#: else\n\n\n\n"
    },
    "name": "Conditional Effect",
    "display_name": "If {conditions}...",
    "desc": "Add an effect that will only happen under the specified conditions.",
    "vars": {
      "conditions": {
        "default_val": [],
        "var_type": "conditional"
      }
    },
    "child_types": [
      "EFFECT",
      "ELIF",
      "ELSE"
    ],
    "sorting_rank": 4000,
    "needs_children": true
  },
  {
    "label": "ELIF",
    "scripts": {
      "elif": "elif {conditions}:\n    #: effect\n\n\n\n"
    },
    "name": "Elif Effect",
    "display_name": "Elif {conditions}...",
    "desc": "Add an elif (else if) effect to this conditional.",
    "vars": {
      "conditions": {
        "default_val": [],
        "var_type": "conditional"
      }
    },
    "child_types": [
      "EFFECT"
    ],
    "needs_children": true
  },
  {
    "label": "ELSE",
    "scripts": {
      "else": "else:\n    #: effect\n\n\n"
    },
    "name": "Else Effect",
    "display_name": "Else...",
    "desc": "Add an else effect to this conditional.",
    "child_types": [
      "EFFECT"
    ],
    "needs_children": true,
    "singular": true
  },
  {
    "label": "EFFECT",
    "scripts": {
      "effect": "camp.eject()\n\n\n\n"
    },
    "name": "End Scenario",
    "desc": "End the scenario and eject the PC."
  },
  {
    "label": "EFFECT",
    "scripts": {
      "effect": "self.memo = Memo({message}, {memo_scene})\n\n\n\n"
    },
    "name": "Set Memo",
    "display_name": "Memo: {message}",
    "desc": "Set a message that will appear in the memo browser. If there is already a memo for this plot, it will be overwritten.",
    "vars": {
      "message": {
        "default_val": "",
        "var_type": "text"
      },
      "memo_scene": {
        "default_val": "None",
        "var_type": "scene"
      }
    }
  },
  {
    "label": "EFFECT",
    "scripts": {
      "effect": "self.memo = None\n\n\n\n"
    },
    "name": "Clear Memo",
    "desc": "Deletes the memo currently set for this plot. If there is no current memo, it has no effect."
  },
  {
    "label": "EFFECT",
    "scripts": {
      "effect": "camp.dole_xp({amount})\n\n\n\n"
    },
    "name": "Give XP to the Lance",
    "display_name": "XP {amount:+}",
    "vars": {
      "amount": {
        "default_val": "100",
        "var_type": "integer"
      }
    }
  },
  {
    "label": "EFFECT",
    "scripts": {
      "effect": "camp.campdata[{var_name}] = {value}\n\n\n\n"
    },
    "name": "Set Campaign Variable",
    "display_name": "Set {var_name} = {value}",
    "vars": {
      "var_name": {
        "var_type": "campaign_variable",
        "default_val": "x"
      },
      "value": {
        "default_val": 0,
        "var_type": "integer"
      }
    },
    "sorting_rank": 200
  },
  {
    "label": "EFFECT",
    "scripts": {
      "effect": "camp.campdata[{var_name}] = camp.campdata.get({var_name},0) + {value}\n\n\n\n"
    },
    "name": "Add Campaign Variable",
    "display_name": "Add {var_name} + {value}",
    "vars": {
      "var_name": {
        "var_type": "campaign_variable",
        "default_val": "x"
      },
      "value": {
        "default_val": 0,
        "var_type": "integer"
      }
    },
    "sorting_rank": 200
  },
  {
    "label": "EFFECT",
    "scripts": {
      "effect": "camp.credits += {value}\n\n\n\n"
    },
    "name": "Add Credits",
    "display_name": "Add {value:+,} credits",
    "vars": {
      "value": {
        "default_val": 0,
        "var_type": "integer"
      }
    },
    "sorting_rank": 200
  },
  {
    "label": "EFFECT",
    "scripts": {
      "effect": "camp.pc.add_badge(gears.meritbadges.TagReactionBadge({badge_name}, {badge_desc}, {badge_tagmods}, {badge_addtags}))\n\n\n\n"
    },
    "name": "Give Tag Merit Badge",
    "display_name": "Give {badge_name}",
    "desc": "Gives the PC a merit badge which affects how certain NPCs react to them, depending on personality tags.",
    "vars": {
      "badge_name": {
        "default_val": "Merit Badge",
        "var_type": "literal"
      },
      "badge_desc": {
        "default_val": "",
        "var_type": "text"
      },
      "badge_tagmods": {
        "default_val": [],
        "var_type": "tag_reaction"
      },
      "badge_addtags": {
        "default_val": [],
        "var_type": "list:job_tags"
      }
    },
    "sorting_rank": 2000
  },
  {
    "label": "EFFECT",
    "scripts": {
      "effect": "camp.pc.add_badge(gears.meritbadges.UniversalReactionBadge({badge_name}, {badge_desc}, {badge_modifier}, {badge_addtags}))\n\n\n\n"
    },
    "name": "Give Universal Merit Badge",
    "display_name": "Give {badge_name}",
    "desc": "Gives the PC a merit badge which affects how all NPCs react to them.",
    "vars": {
      "badge_name": {
        "default_val": "Merit Badge",
        "var_type": "literal"
      },
      "badge_desc": {
        "default_val": "",
        "var_type": "text"
      },
      "badge_modifier": {
        "default_val": 0,
        "var_type": "integer"
      },
      "badge_addtags": {
        "default_val": [],
        "var_type": "list:job_tags"
      }
    },
    "sorting_rank": 2000
  },
  {
    "label": "EFFECT",
    "scripts": {
      "effect": "plotutility.AutoJoiner({npc})(camp)\n{npc}.relationship.tags.add(gears.relationships.RT_LANCEMATE)\n\n"
    },
    "name": "NPC Joins Party",
    "desc": "Select an NPC to join the party and receive the RT_LANCEMATE tag.",
    "vars": {
      "npc": {
        "var_type": "npc",
        "default_val": null,
        "must_be_defined": true
      }
    }
  }
]