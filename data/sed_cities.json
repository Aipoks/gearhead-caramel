[
  {
    "label": "CITY",
    "scripts": {
      "plot_subplots": "+subplot CITY_{unique_id}_{_uid}\n\n",
      "main": "class City_{unique_id}_{_uid}( Plot ):\n    LABEL = \"CITY_{unique_id}_{_uid}\"\n    active = True\n    scope = \"METRO\"\n    #: plot_properties\n\n    def custom_init( self, nart ):\n        +init_plot\n        self.elements[\"METRO\"] = self.elements[\"LOCALE\"].metrodat\n        if {entrance_world_map}:\n            edge_params = {entrance_world_map_data.edge_params}\n            for e in edge_params:\n                nart.camp.campdata[{entrance_world_map}].connect_entrance_to_entrance(self.elements[\"MISSION_GATE\"], **e)\n\n        #: plot_init\n        #: plot_actions\n        #: plot_subplots\n        +subplot CF_METROSCENE_RECOVERY_HANDLER\n        +subplot CF_METROSCENE_WME_DEFENSE_HANDLER\n\n        if {allow_random_plots}:\n            +subplot CF_METROSCENE_RANDOM_PLOT_HANDLER\n\n        return True\n\n    #: plot_methods\n\n",
      "scenario_build": "# Build the city here, store it in the_world\nteam1 = teams.Team(name=\"Player Team\")\nteam2 = teams.Team(name=\"Civilian Team\", allies=(team1,))\nmyscene = gears.GearHeadScene(\n    50, 50, \"{city_name}\", player_team=team1, civilian_team=team2, scale=gears.scale.HumanScale, is_metro=True,\n    faction={city_faction}, attributes={city_attributes},\n    exploration_music={exploration_music}, combat_music={combat_music}\n)\n\n# Create a scene generator\nmyscenegen = {scene_generator}(\n    myscene, {scene_architecture}(floor_terrain={floor_terrain}), road_terrain={road_terrain}, road_thickness=3\n)\n\n# Register the city scene and the metro data\nself.register_scene(nart, myscene, myscenegen, ident=\"_CITY_{_uid}\")\nthe_world[{LOCALE_UID}] = myscene\n\n# Create the entry/exit point.\nmyroom = self.register_element(\n    \"_ENTRY_ROOM_{_uid}\", pbge.randmaps.rooms.Room(3, 3, anchor={entrance_anchor}, tags=[pbge.randmaps.IS_CONNECTED_ROOM]),\n    dident=\"_CITY_{_uid}\"\n)\n\nmygate = self.register_element(\n    \"_MISSION_GATE_{_uid}\", Exit(name=\"{entrance_name}\", desc={entrance_desc},\n    anchor=pbge.randmaps.anchors.middle, plot_locked=True), dident=\"_ENTRY_ROOM_{_uid}\"\n)\n\nthe_world[{MISSION_GATE_UID}] = mygate\n\nif {entrance_world_map}:\n    nart.camp.campdata[{entrance_world_map}].associate_gate_with_map(mygate)\n    mynode = campfeatures.WorldMapNode(destination=myscene, entrance=mygate, {entrance_world_map_data.node_params})\n    nart.camp.campdata[{entrance_world_map}].add_node(mynode, {entrance_world_map_data.node_pos})\n\n\n\n"
    },
    "name": "New Metro Scene",
    "display_name": "City: {city_name}",
    "desc": "Adds a metro scene to the adventure. This is generally a city scene that serves as the player's home base between adventures. The metro scene handles the following things:\n - Provides a MetroDat slot for local plots.\n - Handles injury and death recovery.\n - Loads lancemate character dev plots (if enabled).",
    "is_new_branch": true,
    "vars": {
      "city_name": {
        "default_val": "Megacormack",
        "var_type": "string"
      },
      "city_faction": {
        "default_val": null,
        "var_type": "faction"
      },
      "city_attributes": {
        "default_val": [
          "gears.tags.SCENE_OUTDOORS",
          "gears.tags.City",
          "personality.GreenZone",
          "gears.tags.SCENE_PUBLIC"
        ],
        "var_type": "scene_tags"
      },
      "scene_generator": {
        "default_val": "pbge.randmaps.CityGridGenerator",
        "var_type": "city_scene_generator",
        "must_be_defined": true
      },
      "scene_architecture": {
        "default_val": "gharchitecture.HumanScaleGreenzone",
        "var_type": "personal_scale_architecture",
        "must_be_defined": true
      },
      "entrance_name": {
        "default_val": "Exit",
        "var_type": "string"
      },
      "entrance_desc": {
        "default_val": "Where do you want to go?",
        "var_type": "text"
      },
      "entrance_world_map": {
        "default_val": null,
        "var_type": "world_map"
      },
      "entrance_world_map_data": {
        "default_val": null,
        "var_type": "world_map_data"
      },
      "entrance_anchor": {
        "default_val": "pbge.randmaps.anchors.south",
        "var_type": "map_anchor"
      },
      "exploration_music": {
        "default_val": "airtone_-_reCreation.ogg",
        "var_type": "music"
      },
      "combat_music": {
        "default_val": "Late.ogg",
        "var_type": "music"
      },
      "city_palette": {
        "default_val": [
          "Black",
          "Black",
          "Black",
          "Black",
          "Black"
        ],
        "var_type": "palette"
      },
      "floor_terrain": {
        "default_val": "ghterrain.GreenZoneGrass",
        "var_type": "terrain:floor"
      },
      "road_terrain": {
        "default_val": "ghterrain.Pavement",
        "var_type": "terrain:floor",
        "tooltip": "Road terrain is not used by all scene generators"
      },
      "allow_random_plots": {
        "default_val": true,
        "var_type": "boolean"
      }
    },
    "child_types": [
      "CITY_FEATURE",
      "SCENE_FEATURE"
    ],
    "elements": {
      "LOCALE": {
        "e_type": "scene",
        "name": "{city_name}",
        "aliases": [
          "METROSCENE",
          "CITY",
          "PARENT_SCENE"
        ]
      },
      "MISSION_GATE": {
        "e_type": "gate",
        "name": "{entrance_name}",
        "aliases": [
          "ENTRANCE"
        ]
      }
    },
    "physicals": [
      {
        "element_key": "LOCALE",
        "variable_keys": [
          "city_name",
          "city_faction",
          "city_attributes",
          "scene_generator",
          "scene_architecture",
          "exploration_music",
          "combat_music",
          "city_palette",
          "floor_terrain",
          "road_terrain",
          "allow_random_plots"
        ],
        "child_types": null
      },
      {
        "element_key": "MISSION_GATE",
        "parent": "LOCALE",
        "variable_keys": [
          "entrance_name",
          "entrance_desc",
          "entrance_world_map",
          "entrance_world_map_data",
          "entrance_anchor"
        ]
      }
    ],
    "sorting_rank": 1000,
    "category": "LOCATIONS"
  },
  {
    "label": "CITY",
    "scripts": {
      "plot_subplots": "+subplot CITY_{unique_id}_{_uid}\n\n",
      "main": "class City_{unique_id}_{_uid}( Plot ):\n    LABEL = \"CITY_{unique_id}_{_uid}\"\n    active = True\n    scope = \"METRO\"\n    #: plot_properties\n\n    def custom_init( self, nart ):\n        +init_plot\n        self.elements[\"METRO\"] = self.elements[\"LOCALE\"].metrodat\n        if {entrance_world_map}:\n            edge_params = {entrance_world_map_data.edge_params}\n            for e in edge_params:\n                nart.camp.campdata[{entrance_world_map}].connect_entrance_to_entrance(self.elements[\"MISSION_GATE\"], **e)\n        #: plot_init\n        #: plot_actions\n        #: plot_subplots\n        +subplot CF_METROSCENE_RECOVERY_HANDLER\n        +subplot CF_METROSCENE_WME_DEFENSE_HANDLER\n\n        if {allow_random_plots}:\n            +subplot CF_METROSCENE_RANDOM_PLOT_HANDLER\n\n        return True\n\n    #: plot_methods\n\n",
      "scenario_build": "# Build the city here, store it in the_world\nteam1 = teams.Team(name=\"Player Team\")\nteam2 = teams.Team(name=\"Civilian Team\", allies=(team1,))\nmyscene = gears.GearHeadScene(\n    50, 60, \"{city_name}\", player_team=team1, civilian_team=team2, scale=gears.scale.HumanScale, is_metro=True,\n    faction={city_faction}, attributes={city_attributes},\n    exploration_music={exploration_music}, combat_music={combat_music}\n)\n\n# Create a scene generator\nmyroom = pbge.randmaps.rooms.Room(40,25)\nmyroom.area = pygame.Rect(5,10,40,25)\nmyscenegen = pbge.randmaps.PartlyUrbanGenerator(\n    myscene, game.content.gharchitecture.HumanScaleGreenzone(prepare=pbge.randmaps.prep.GradientPrep([[{city_terrain},40],[{beach_terrain},15],[{water_terrain},5]]),\n                                                             mutate=pbge.randmaps.mutator.CellMutator(),\n                                                             wall_converter=pbge.randmaps.converter.WallOnlyOnFloorConverter(ghterrain.Bushes, {city_terrain})),\n    road_terrain={road_terrain},\n    urban_area=myroom\n)\n\n# Register the city scene and the metro data\nself.register_scene(nart, myscene, myscenegen, ident=\"_CITY_{_uid}\")\n\nthe_world[{LOCALE_UID}] = myscene\n\n# Create the entry/exit point.\nmyroom = self.register_element(\n    \"_ENTRY_ROOM_{_uid}\", pbge.randmaps.rooms.Room(50, 10),\n    dident=\"_CITY_{_uid}\"\n)\nmyroom.area = pygame.Rect(0,40,50,10)\n\n+add_physical ROOM myroom\n\nmygate = self.register_element(\n    \"_MISSION_GATE_{_uid}\", Exit(name=\"{entrance_name}\", desc={entrance_desc},\n    anchor=pbge.randmaps.anchors.middle, plot_locked=True), dident=\"_ENTRY_ROOM_{_uid}\"\n)\n\nthe_world[{MISSION_GATE_UID}] = mygate\n\nif {entrance_world_map}:\n    nart.camp.campdata[{entrance_world_map}].associate_gate_with_map(mygate)\n    mynode = campfeatures.WorldMapNode(destination=myscene, entrance=mygate, {entrance_world_map_data.node_params})\n    nart.camp.campdata[{entrance_world_map}].add_node(mynode, {entrance_world_map_data.node_pos})\n\n\n\n\n"
    },
    "name": "New Beachfront Metro Scene",
    "display_name": "City: {city_name}",
    "desc": "Adds a metro scene to the adventure. This is generally a city scene that serves as the player's home base between adventures. The metro scene handles the following things:\n - Provides a MetroDat slot for local plots.\n - Handles injury and death recovery.\n - Loads lancemate character dev plots (if enabled).",
    "is_new_branch": true,
    "vars": {
      "city_name": {
        "default_val": "Megabusan",
        "var_type": "string"
      },
      "city_faction": {
        "default_val": null,
        "var_type": "faction"
      },
      "city_attributes": {
        "default_val": [
          "gears.tags.SCENE_OUTDOORS",
          "gears.tags.City",
          "personality.GreenZone",
          "gears.tags.SCENE_PUBLIC"
        ],
        "var_type": "scene_tags"
      },
      "room_name": {
        "default_val": "The Beach",
        "var_type": "string"
      },
      "entrance_name": {
        "default_val": "To The Docks",
        "var_type": "string"
      },
      "entrance_desc": {
        "default_val": "Where do you want to go?",
        "var_type": "text"
      },
      "entrance_world_map": {
        "default_val": null,
        "var_type": "world_map"
      },
      "entrance_world_map_data": {
        "default_val": null,
        "var_type": "world_map_data"
      },
      "exploration_music": {
        "default_val": "airtone_-_reCreation.ogg",
        "var_type": "music"
      },
      "combat_music": {
        "default_val": "Late.ogg",
        "var_type": "music"
      },
      "city_palette": {
        "default_val": [
          "Black",
          "Black",
          "Black",
          "Black",
          "Black"
        ],
        "var_type": "palette"
      },
      "city_terrain": {
        "default_val": "ghterrain.GreenZoneGrass",
        "var_type": "terrain:floor"
      },
      "beach_terrain": {
        "default_val": "ghterrain.Sand",
        "var_type": "terrain:floor"
      },
      "water_terrain": {
        "default_val": "ghterrain.Water",
        "var_type": "terrain:floor"
      },
      "road_terrain": {
        "default_val": "ghterrain.Pavement",
        "var_type": "terrain:floor"
      },
      "allow_random_plots": {
        "default_val": true,
        "var_type": "boolean"
      }
    },
    "child_types": [
      "CITY_FEATURE",
      "SCENE_FEATURE",
      "ROOM_FEATURE"
    ],
    "elements": {
      "LOCALE": {
        "e_type": "scene",
        "name": "{city_name}",
        "aliases": [
          "METROSCENE",
          "CITY",
          "PARENT_SCENE"
        ]
      },
      "ROOM": {
        "e_type": "room",
        "name": "Room: {room_name}"
      },
      "MISSION_GATE": {
        "e_type": "gate",
        "name": "{entrance_name}",
        "aliases": [
          "ENTRANCE"
        ]
      }
    },
    "physicals": [
      {
        "element_key": "LOCALE",
        "variable_keys": [
          "city_name",
          "city_faction",
          "city_attributes",
          "exploration_music",
          "combat_music",
          "city_palette",
          "city_terrain",
          "beach_terrain",
          "water_terrain",
          "road_terrain"
        ],
        "child_types": null
      },
      {
        "element_key": "ROOM",
        "parent": "LOCALE",
        "variable_keys": [
          "room_name"
        ]
      },
      {
        "element_key": "MISSION_GATE",
        "parent": "ROOM",
        "variable_keys": [
          "entrance_name",
          "entrance_desc",
          "entrance_world_map",
          "entrance_world_map_data"
        ]
      }
    ],
    "sorting_rank": 1000,
    "category": "LOCATIONS"
  },
  {
    "label": "CITY_FEATURE",
    "scripts": {
      "plot_subplots": "for t in range({num_random_lancemates}):\n    +subplot RANDOM_LANCEMATE\n\n\n\n"
    },
    "name": "Add Random Lancemates",
    "desc": "Add some random lancemates to this city.",
    "vars": {
      "num_random_lancemates": {
        "default_val": "1",
        "var_type": "integer"
      }
    },
    "singular": true
  },
  {
    "label": "CITY_FEATURE",
    "scripts": {
      "scenario_build": "splot = self.add_sub_plot(\n    nart, \"SHOP_BLACKMARKET\", elements=dict(LOCALE=the_world[{METROSCENE_UID}], METROSCENE=the_world[{METROSCENE_UID}], METRO=the_world[{METROSCENE_UID}].metrodat, MISSION_GATE=the_world[{MISSION_GATE_UID}], CITY_COLORS={city_palette}, SHOP_NAME={shop_name}, NPC_NAME={npc_name}, DOOR_SIGN={door_sign}, INTERIOR_TAGS={interior_tags})\n)\n+add_physical LOCALE splot.elements[\"INTERIOR\"]\n+add_physical ROOM splot.elements[\"FOYER\"]\n+add_physical NPC splot.elements[\"SHOPKEEPER\"]\n\n",
      "plot_init": "+subplot BLACKMARKET_{unique_id}_{_uid}\n\n",
      "main": "class BlackMarket_{unique_id}_{_uid}( Plot ):\n    LABEL = \"BLACKMARKET_{unique_id}_{_uid}\"\n    active = True\n    scope = \"LOCALE\"\n    #: plot_properties\n\n    def custom_init( self, nart ):\n        +init_plot\n        #: plot_init\n        #: plot_actions\n        #: plot_subplots\n        return True\n\n    def NPC_offers(self, camp):\n        mylist = list()\n        #: npc_offers\n        return mylist\n\n    #: plot_methods\n\n\n\n"
    },
    "name": "Add Black Market",
    "display_name": "Black Market: {shop_name}",
    "desc": "Adds a black market and a shopkeeper NPC to the city.",
    "is_new_branch": true,
    "vars": {
      "shop_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "npc_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "room_name": {
        "default_val": "Foyer",
        "var_type": "literal"
      },
      "shop_faction": {
        "default_val": null,
        "var_type": "faction"
      },
      "interior_tags": {
        "default_val": [
          "gears.tags.SCENE_PUBLIC"
        ],
        "var_type": "scene_tags"
      },
      "door_sign": {
        "default_val": "None",
        "var_type": "door_sign"
      }
    },
    "child_types": [
      "SCENE_FEATURE",
      "ROOM_FEATURE",
      "NPC_FEATURE"
    ],
    "elements": {
      "LOCALE": {
        "e_type": "scene",
        "name": "Black Market: {shop_name}",
        "aliases": [
          "PARENT_SCENE"
        ]
      },
      "ROOM": {
        "e_type": "room",
        "name": "Room: {room_name}"
      },
      "NPC": {
        "e_type": "npc",
        "name": "Shopkeeper: {npc_name}",
        "aliases": [
          "NPC"
        ]
      }
    },
    "physicals": [
      {
        "element_key": "LOCALE",
        "parent": "METROSCENE",
        "variable_keys": [
          "shop_name",
          "shop_faction",
          "door_sign",
          "interior_tags"
        ],
        "child_types": [
          "SCENE_FEATURE"
        ]
      },
      {
        "element_key": "ROOM",
        "parent": "LOCALE",
        "variable_keys": [
          "room_name"
        ],
        "child_types": [
          "ROOM_FEATURE"
        ]
      },
      {
        "element_key": "NPC",
        "parent": "ROOM",
        "variable_keys": [
          "npc_name"
        ],
        "child_types": [
          "NPC_FEATURE"
        ]
      }
    ]
  },
  {
    "label": "CITY_FEATURE",
    "scripts": {
      "scenario_build": "splot = self.add_sub_plot(nart, \"SHOP_GENERALSTORE\", elements=dict(LOCALE=the_world[{METROSCENE_UID}], METROSCENE=the_world[{METROSCENE_UID}], METRO=the_world[{METROSCENE_UID}].metrodat, MISSION_GATE=the_world[{MISSION_GATE_UID}], CITY_COLORS={city_palette}, SHOP_NAME={shop_name}, NPC_NAME={npc_name}, DOOR_SIGN={door_sign}, INTERIOR_TAGS={interior_tags}))\n+add_physical LOCALE splot.elements[\"INTERIOR\"]\n+add_physical ROOM splot.elements[\"FOYER\"]\n+add_physical NPC splot.elements[\"SHOPKEEPER\"]\n\n",
      "plot_init": "+subplot GENERALSTORE_{unique_id}_{_uid}\n\n",
      "main": "class GeneralStore_{unique_id}_{_uid}( Plot ):\n    LABEL = \"GENERALSTORE_{unique_id}_{_uid}\"\n    active = True\n    scope = \"LOCALE\"\n    #: plot_properties\n\n    def custom_init( self, nart ):\n        +init_plot\n        #: plot_init\n        #: plot_actions\n        #: plot_subplots\n        return True\n\n    def NPC_offers(self, camp):\n        mylist = list()\n        #: npc_offers\n        return mylist\n\n    #: plot_methods\n\n\n\n"
    },
    "name": "Add General Store",
    "display_name": "General Store: {shop_name}",
    "desc": "Adds a general store and a shopkeeper NPC to the city. Leave shop_name and/or npc_name blank for random names.",
    "is_new_branch": true,
    "vars": {
      "shop_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "npc_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "room_name": {
        "default_val": "Foyer",
        "var_type": "literal"
      },
      "shop_faction": {
        "default_val": null,
        "var_type": "faction"
      },
      "interior_tags": {
        "default_val": [
          "gears.tags.SCENE_PUBLIC"
        ],
        "var_type": "scene_tags"
      },
      "door_sign": {
        "default_val": "None",
        "var_type": "door_sign"
      }
    },
    "child_types": [
      "SCENE_FEATURE",
      "ROOM_FEATURE",
      "NPC_FEATURE"
    ],
    "elements": {
      "LOCALE": {
        "e_type": "scene",
        "name": "General Store: {shop_name}",
        "aliases": [
          "PARENT_SCENE"
        ]
      },
      "ROOM": {
        "e_type": "room",
        "name": "Room: {room_name}"
      },
      "NPC": {
        "e_type": "npc",
        "name": "Shopkeeper: {npc_name}",
        "aliases": [
          "NPC"
        ]
      }
    },
    "physicals": [
      {
        "element_key": "LOCALE",
        "parent": "METROSCENE",
        "variable_keys": [
          "shop_name",
          "shop_faction",
          "door_sign",
          "interior_tags"
        ],
        "child_types": [
          "SCENE_FEATURE"
        ]
      },
      {
        "element_key": "ROOM",
        "parent": "LOCALE",
        "variable_keys": [
          "room_name"
        ],
        "child_types": [
          "ROOM_FEATURE"
        ]
      },
      {
        "element_key": "NPC",
        "parent": "ROOM",
        "variable_keys": [
          "npc_name"
        ],
        "child_types": [
          "NPC_FEATURE"
        ]
      }
    ]
  },
  {
    "label": "CITY_FEATURE",
    "scripts": {
      "scenario_build": "splot = self.add_sub_plot(nart, \"SHOP_WEAPONSTORE\", elements=dict(LOCALE=the_world[{METROSCENE_UID}], METROSCENE=the_world[{METROSCENE_UID}], METRO=the_world[{METROSCENE_UID}].metrodat, MISSION_GATE=the_world[{MISSION_GATE_UID}], CITY_COLORS={city_palette}, SHOP_NAME={shop_name}, NPC_NAME={npc_name}, DOOR_SIGN={door_sign}, INTERIOR_TAGS={interior_tags}))\n+add_physical LOCALE splot.elements[\"INTERIOR\"]\n+add_physical ROOM splot.elements[\"FOYER\"]\n+add_physical NPC splot.elements[\"SHOPKEEPER\"]\n\n",
      "plot_init": "+subplot WEAPONSTORE_{unique_id}_{_uid}\n\n",
      "main": "class WeaponStore_{unique_id}_{_uid}( Plot ):\n    LABEL = \"WEAPONSTORE_{unique_id}_{_uid}\"\n    active = True\n    scope = \"LOCALE\"\n    #: plot_properties\n\n    def custom_init( self, nart ):\n        +init_plot\n        #: plot_init\n        #: plot_actions\n        #: plot_subplots\n        return True\n\n    def NPC_offers(self, camp):\n        mylist = list()\n        #: npc_offers\n        return mylist\n\n    #: plot_methods\n\n\n\n"
    },
    "name": "Add Weapon Store",
    "display_name": "Weapon Store: {shop_name}",
    "desc": "Adds a weapon store and a shopkeeper NPC to the city. Leave shop_name and/or npc_name blank for random names.",
    "is_new_branch": true,
    "vars": {
      "shop_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "npc_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "room_name": {
        "default_val": "Foyer",
        "var_type": "literal"
      },
      "shop_faction": {
        "default_val": null,
        "var_type": "faction"
      },
      "interior_tags": {
        "default_val": [
          "gears.tags.SCENE_PUBLIC"
        ],
        "var_type": "scene_tags"
      },
      "door_sign": {
        "default_val": "None",
        "var_type": "door_sign"
      }
    },
    "child_types": [
      "SCENE_FEATURE",
      "ROOM_FEATURE",
      "NPC_FEATURE"
    ],
    "elements": {
      "LOCALE": {
        "e_type": "scene",
        "name": "Weapon Store: {shop_name}",
        "aliases": [
          "PARENT_SCENE"
        ]
      },
      "ROOM": {
        "e_type": "room",
        "name": "Room: {room_name}"
      },
      "NPC": {
        "e_type": "npc",
        "name": "Shopkeeper: {npc_name}"
      }
    },
    "physicals": [
      {
        "element_key": "LOCALE",
        "parent": "METROSCENE",
        "variable_keys": [
          "shop_name",
          "shop_faction",
          "door_sign",
          "interior_tags"
        ],
        "child_types": [
          "SCENE_FEATURE"
        ]
      },
      {
        "element_key": "ROOM",
        "parent": "LOCALE",
        "variable_keys": [
          "room_name"
        ],
        "child_types": [
          "ROOM_FEATURE"
        ]
      },
      {
        "element_key": "NPC",
        "parent": "ROOM",
        "variable_keys": [
          "npc_name"
        ],
        "child_types": [
          "NPC_FEATURE"
        ]
      }
    ]
  },
  {
    "label": "CITY_FEATURE",
    "scripts": {
      "scenario_build": "splot = self.add_sub_plot(nart, \"SHOP_ARMORSTORE\", elements=dict(LOCALE=the_world[{METROSCENE_UID}], METROSCENE=the_world[{METROSCENE_UID}], METRO=the_world[{METROSCENE_UID}].metrodat, MISSION_GATE=the_world[{MISSION_GATE_UID}], CITY_COLORS={city_palette}, SHOP_NAME={shop_name}, NPC_NAME={npc_name}, DOOR_SIGN={door_sign}, INTERIOR_TAGS={interior_tags}))\n+add_physical LOCALE splot.elements[\"INTERIOR\"]\n+add_physical ROOM splot.elements[\"FOYER\"]\n+add_physical NPC splot.elements[\"SHOPKEEPER\"]\n\n",
      "plot_init": "+subplot ARMORSTORE_{unique_id}_{_uid}\n\n",
      "main": "class ArmorStore_{unique_id}_{_uid}( Plot ):\n    LABEL = \"ARMORSTORE_{unique_id}_{_uid}\"\n    active = True\n    scope = \"LOCALE\"\n    #: plot_properties\n\n    def custom_init( self, nart ):\n        +init_plot\n        #: plot_init\n        #: plot_actions\n        #: plot_subplots\n        return True\n\n    def NPC_offers(self, camp):\n        mylist = list()\n        #: npc_offers\n        return mylist\n\n    #: plot_methods\n\n\n\n"
    },
    "name": "Add Armor Store",
    "display_name": "Armor Store: {shop_name}",
    "desc": "Adds an armor store and a shopkeeper NPC to the city. Leave shop_name and/or npc_name blank for random names.",
    "is_new_branch": true,
    "vars": {
      "shop_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "npc_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "room_name": {
        "default_val": "Foyer",
        "var_type": "literal"
      },
      "shop_faction": {
        "default_val": null,
        "var_type": "faction"
      },
      "interior_tags": {
        "default_val": [
          "gears.tags.SCENE_PUBLIC"
        ],
        "var_type": "scene_tags"
      },
      "door_sign": {
        "default_val": "None",
        "var_type": "door_sign"
      }
    },
    "child_types": [
      "SCENE_FEATURE",
      "ROOM_FEATURE",
      "NPC_FEATURE"
    ],
    "elements": {
      "LOCALE": {
        "e_type": "scene",
        "name": "Armor Store: {shop_name}",
        "aliases": [
          "PARENT_SCENE"
        ]
      },
      "ROOM": {
        "e_type": "room",
        "name": "Room: {room_name}"
      },
      "NPC": {
        "e_type": "npc",
        "name": "Shopkeeper: {npc_name}"
      }
    },
    "physicals": [
      {
        "element_key": "LOCALE",
        "parent": "METROSCENE",
        "variable_keys": [
          "shop_name",
          "shop_faction",
          "door_sign",
          "interior_tags"
        ],
        "child_types": [
          "SCENE_FEATURE"
        ]
      },
      {
        "element_key": "ROOM",
        "parent": "LOCALE",
        "variable_keys": [
          "room_name"
        ],
        "child_types": [
          "ROOM_FEATURE"
        ]
      },
      {
        "element_key": "NPC",
        "parent": "ROOM",
        "variable_keys": [
          "npc_name"
        ],
        "child_types": [
          "NPC_FEATURE"
        ]
      }
    ]
  },
  {
    "label": "CITY_FEATURE",
    "scripts": {
      "scenario_build": "splot = self.add_sub_plot(nart, \"SHOP_GARAGE\", elements=dict(LOCALE=the_world[{METROSCENE_UID}], METROSCENE=the_world[{METROSCENE_UID}], METRO=the_world[{METROSCENE_UID}].metrodat, MISSION_GATE=the_world[{MISSION_GATE_UID}], CITY_COLORS={city_palette}, SHOP_NAME={shop_name}, NPC_NAME={npc_name}, DOOR_SIGN={door_sign}, INTERIOR_TAGS={interior_tags}))\n+add_physical LOCALE splot.elements[\"INTERIOR\"]\n+add_physical NPC splot.elements[\"SHOPKEEPER\"]\n+add_physical ROOM splot.elements[\"FOYER\"]\n\n",
      "plot_init": "+subplot GARAGE_{unique_id}_{_uid}\n\n",
      "main": "class Garage_{unique_id}_{_uid}( Plot ):\n    LABEL = \"GARAGE_{unique_id}_{_uid}\"\n    active = True\n    scope = \"LOCALE\"\n    #: plot_properties\n\n    def custom_init( self, nart ):\n        +init_plot\n        #: plot_init\n        #: plot_actions\n        #: plot_subplots\n        return True\n\n    def NPC_offers(self, camp):\n        mylist = list()\n        #: npc_offers\n        return mylist\n\n    #: plot_methods\n\n\n\n"
    },
    "name": "Add Garage",
    "display_name": "Garage: {shop_name}",
    "desc": "Adds a garage and a mechanic NPC to the city. Leave shop_name and/or npc_name blank for random names.",
    "is_new_branch": true,
    "vars": {
      "shop_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "npc_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "room_name": {
        "default_val": "Foyer",
        "var_type": "literal"
      },
      "shop_faction": {
        "default_val": null,
        "var_type": "faction"
      },
      "interior_tags": {
        "default_val": [
          "gears.tags.SCENE_PUBLIC"
        ],
        "var_type": "scene_tags"
      },
      "door_sign": {
        "default_val": "None",
        "var_type": "door_sign"
      }
    },
    "child_types": [
      "SCENE_FEATURE",
      "ROOM_FEATURE",
      "NPC_FEATURE"
    ],
    "elements": {
      "LOCALE": {
        "e_type": "scene",
        "name": "Garage: {shop_name}",
        "aliases": [
          "PARENT_SCENE"
        ]
      },
      "ROOM": {
        "e_type": "room",
        "name": "Room: {room_name}"
      },
      "NPC": {
        "e_type": "npc",
        "name": "Mechanic: {npc_name}",
        "aliases": [
          "NPC"
        ]
      }
    },
    "physicals": [
      {
        "element_key": "LOCALE",
        "parent": "METROSCENE",
        "variable_keys": [
          "shop_name",
          "shop_faction",
          "door_sign",
          "interior_tags"
        ],
        "child_types": [
          "SCENE_FEATURE"
        ]
      },
      {
        "element_key": "ROOM",
        "parent": "LOCALE",
        "variable_keys": [
          "room_name"
        ],
        "child_types": [
          "ROOM_FEATURE"
        ]
      },
      {
        "element_key": "NPC",
        "parent": "ROOM",
        "variable_keys": [
          "npc_name"
        ],
        "child_types": [
          "NPC_FEATURE"
        ]
      }
    ]
  },
  {
    "label": "CITY_FEATURE",
    "scripts": {
      "scenario_build": "splot = self.add_sub_plot(nart, \"SHOP_HOSPITAL\", elements=dict(LOCALE=the_world[{METROSCENE_UID}], METROSCENE=the_world[{METROSCENE_UID}], METRO=the_world[{METROSCENE_UID}].metrodat, MISSION_GATE=the_world[{MISSION_GATE_UID}], CITY_COLORS={city_palette}, SHOP_NAME={shop_name}, NPC_NAME={npc_name}, DOOR_SIGN={door_sign}, INTERIOR_TAGS={interior_tags}))\n+add_physical LOCALE splot.elements[\"INTERIOR\"]\n+add_physical NPC splot.elements[\"SHOPKEEPER\"]\n+add_physical ROOM splot.elements[\"FOYER\"]\n\n",
      "plot_init": "+subplot HOSPITAL_{unique_id}_{_uid}\n\n",
      "main": "class Hospital_{unique_id}_{_uid}( Plot ):\n    LABEL = \"HOSPITAL_{unique_id}_{_uid}\"\n    active = True\n    scope = \"LOCALE\"\n    #: plot_properties\n\n    def custom_init( self, nart ):\n        +init_plot\n        #: plot_init\n        #: plot_actions\n        #: plot_subplots\n        return True\n\n    def NPC_offers(self, camp):\n        mylist = list()\n        #: npc_offers\n        return mylist\n\n    #: plot_methods\n\n\n\n"
    },
    "name": "Add Hospital",
    "display_name": "Hospital: {shop_name}",
    "desc": "Adds a hospital and a doctor NPC to the city. Leave shop_name and/or npc_name blank for random names.",
    "is_new_branch": true,
    "vars": {
      "shop_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "npc_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "room_name": {
        "default_val": "Foyer",
        "var_type": "literal"
      },
      "shop_faction": {
        "default_val": null,
        "var_type": "faction"
      },
      "interior_tags": {
        "default_val": [
          "gears.tags.SCENE_PUBLIC"
        ],
        "var_type": "scene_tags"
      },
      "door_sign": {
        "default_val": "None",
        "var_type": "door_sign"
      }
    },
    "child_types": [
      "SCENE_FEATURE",
      "ROOM_FEATURE",
      "NPC_FEATURE"
    ],
    "elements": {
      "LOCALE": {
        "e_type": "scene",
        "name": "Hospital: {shop_name}",
        "aliases": [
          "PARENT_SCENE"
        ]
      },
      "ROOM": {
        "e_type": "room",
        "name": "Room: {room_name}"
      },
      "NPC": {
        "e_type": "npc",
        "name": "Doctor: {npc_name}",
        "aliases": [
          "NPC"
        ]
      }
    },
    "physicals": [
      {
        "element_key": "LOCALE",
        "parent": "METROSCENE",
        "variable_keys": [
          "shop_name",
          "shop_faction",
          "door_sign",
          "interior_tags"
        ],
        "child_types": [
          "SCENE_FEATURE"
        ]
      },
      {
        "element_key": "ROOM",
        "parent": "LOCALE",
        "variable_keys": [
          "room_name"
        ],
        "child_types": [
          "ROOM_FEATURE"
        ]
      },
      {
        "element_key": "NPC",
        "parent": "ROOM",
        "variable_keys": [
          "npc_name"
        ],
        "child_types": [
          "NPC_FEATURE"
        ]
      }
    ]
  },
  {
    "label": "CITY_FEATURE",
    "scripts": {
      "scenario_build": "splot = self.add_sub_plot(nart, \"SHOP_CYBERCLINIC\", elements=dict(LOCALE=the_world[{METROSCENE_UID}], METROSCENE=the_world[{METROSCENE_UID}], METRO=the_world[{METROSCENE_UID}].metrodat, MISSION_GATE=the_world[{MISSION_GATE_UID}], CITY_COLORS={city_palette}, SHOP_NAME={shop_name}, NPC_NAME={npc_name}, DOOR_SIGN={door_sign}, INTERIOR_TAGS={interior_tags}))\n+add_physical LOCALE splot.elements[\"INTERIOR\"]\n+add_physical NPC splot.elements[\"SHOPKEEPER\"]\n+add_physical ROOM splot.elements[\"FOYER\"]\n\n",
      "plot_init": "+subplot CYBERCLINIC_{unique_id}_{_uid}\n\n",
      "main": "class Cyberclinic_{unique_id}_{_uid}( Plot ):\n    LABEL = \"CYBERCLINIC_{unique_id}_{_uid}\"\n    active = True\n    scope = \"LOCALE\"\n    #: plot_properties\n\n    def custom_init( self, nart ):\n        +init_plot\n        #: plot_init\n        #: plot_actions\n        #: plot_subplots\n        return True\n\n    def NPC_offers(self, camp):\n        mylist = list()\n        #: npc_offers\n        return mylist\n\n    #: plot_methods\n\n\n\n"
    },
    "name": "Add Cyberclinic",
    "display_name": "Cyberclinic: {shop_name}",
    "desc": "Adds a cybershop to the city. Leave shop_name and/or npc_name blank for random names.",
    "is_new_branch": true,
    "vars": {
      "shop_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "npc_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "room_name": {
        "default_val": "Foyer",
        "var_type": "literal"
      },
      "shop_faction": {
        "default_val": null,
        "var_type": "faction"
      },
      "interior_tags": {
        "default_val": [
          "gears.tags.SCENE_PUBLIC"
        ],
        "var_type": "scene_tags"
      },
      "door_sign": {
        "default_val": "None",
        "var_type": "door_sign"
      }
    },
    "child_types": [
      "SCENE_FEATURE",
      "ROOM_FEATURE",
      "NPC_FEATURE"
    ],
    "elements": {
      "LOCALE": {
        "e_type": "scene",
        "name": "Cyberclinic: {shop_name}",
        "aliases": [
          "PARENT_SCENE"
        ]
      },
      "ROOM": {
        "e_type": "room",
        "name": "Room: {room_name}"
      },
      "NPC": {
        "e_type": "npc",
        "name": "Doctor: {npc_name}",
        "aliases": [
          "NPC"
        ]
      }
    },
    "physicals": [
      {
        "element_key": "LOCALE",
        "parent": "METROSCENE",
        "variable_keys": [
          "shop_name",
          "shop_faction",
          "door_sign",
          "interior_tags"
        ],
        "child_types": [
          "SCENE_FEATURE"
        ]
      },
      {
        "element_key": "ROOM",
        "parent": "LOCALE",
        "variable_keys": [
          "room_name"
        ],
        "child_types": [
          "ROOM_FEATURE"
        ]
      },
      {
        "element_key": "NPC",
        "parent": "ROOM",
        "variable_keys": [
          "npc_name"
        ],
        "child_types": [
          "NPC_FEATURE"
        ]
      }
    ]
  },
  {
    "label": "CITY_FEATURE",
    "scripts": {
      "scenario_build": "splot = self.add_sub_plot(nart, \"SHOP_MECHA\", elements=dict(LOCALE=the_world[{METROSCENE_UID}], METROSCENE=the_world[{METROSCENE_UID}], METRO=the_world[{METROSCENE_UID}].metrodat, MISSION_GATE=the_world[{MISSION_GATE_UID}], CITY_COLORS={city_palette}, SHOP_NAME={shop_name}, NPC_NAME={npc_name}, DOOR_SIGN={door_sign}, INTERIOR_TAGS={interior_tags}))\n+add_physical LOCALE splot.elements[\"INTERIOR\"]\n+add_physical NPC splot.elements[\"SHOPKEEPER\"]\n+add_physical ROOM splot.elements[\"FOYER\"]\n\n",
      "plot_init": "+subplot MECHASHOP_{unique_id}_{_uid}\n\n",
      "main": "class MechaShop_{unique_id}_{_uid}( Plot ):\n    LABEL = \"MECHASHOP_{unique_id}_{_uid}\"\n    active = True\n    scope = \"LOCALE\"\n    #: plot_properties\n\n    def custom_init( self, nart ):\n        +init_plot\n        #: plot_init\n        #: plot_actions\n        #: plot_subplots\n        return True\n\n    def NPC_offers(self, camp):\n        mylist = list()\n        #: npc_offers\n        return mylist\n\n    #: plot_methods\n\n\n\n"
    },
    "name": "Add Mecha Shop",
    "display_name": "Mecha Shop: {shop_name}",
    "desc": "Adds a mecha shop and a shopkeeper NPC to the city. Leave shop_name and/or npc_name blank for random names.",
    "is_new_branch": true,
    "vars": {
      "shop_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "npc_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "room_name": {
        "default_val": "Foyer",
        "var_type": "literal"
      },
      "shop_faction": {
        "default_val": null,
        "var_type": "faction"
      },
      "interior_tags": {
        "default_val": [
          "gears.tags.SCENE_PUBLIC"
        ],
        "var_type": "scene_tags"
      },
      "door_sign": {
        "default_val": "None",
        "var_type": "door_sign"
      }
    },
    "child_types": [
      "SCENE_FEATURE",
      "ROOM_FEATURE",
      "NPC_FEATURE"
    ],
    "elements": {
      "LOCALE": {
        "e_type": "scene",
        "name": "Mecha Shop: {shop_name}",
        "aliases": [
          "PARENT_SCENE"
        ]
      },
      "ROOM": {
        "e_type": "room",
        "name": "Room: {room_name}"
      },
      "NPC": {
        "e_type": "npc",
        "name": "Mechanic: {npc_name}",
        "aliases": [
          "NPC"
        ]
      }
    },
    "physicals": [
      {
        "element_key": "LOCALE",
        "parent": "METROSCENE",
        "variable_keys": [
          "shop_name",
          "shop_faction",
          "door_sign",
          "interior_tags"
        ],
        "child_types": [
          "SCENE_FEATURE"
        ]
      },
      {
        "element_key": "ROOM",
        "parent": "LOCALE",
        "variable_keys": [
          "room_name"
        ],
        "child_types": [
          "ROOM_FEATURE"
        ]
      },
      {
        "element_key": "NPC",
        "parent": "ROOM",
        "variable_keys": [
          "npc_name"
        ],
        "child_types": [
          "NPC_FEATURE"
        ]
      }
    ]
  },
  {
    "label": "CITY_FEATURE",
    "scripts": {
      "scenario_build": "splot = self.add_sub_plot(nart, \"SHOP_TAVERN\", elements=dict(LOCALE=the_world[{METROSCENE_UID}], METROSCENE=the_world[{METROSCENE_UID}], METRO=the_world[{METROSCENE_UID}].metrodat, MISSION_GATE=the_world[{MISSION_GATE_UID}], CITY_COLORS={city_palette}, SHOP_NAME={tavern_name}, NPC_NAME={npc_name}, DOOR_SIGN={door_sign}, INTERIOR_TAGS={interior_tags}))\n+add_physical LOCALE splot.elements[\"INTERIOR\"]\n+add_physical NPC splot.elements[\"SHOPKEEPER\"]\n+add_physical ROOM splot.elements[\"FOYER\"]\n\n",
      "plot_init": "+subplot TAVERN_{unique_id}_{_uid}\n\n",
      "main": "class Tavern_{unique_id}_{_uid}( Plot ):\n    LABEL = \"TAVERN_{unique_id}_{_uid}\"\n    active = True\n    scope = \"LOCALE\"\n    #: plot_properties\n\n    def custom_init( self, nart ):\n        +init_plot\n        #: plot_init\n        #: plot_actions\n        #: plot_subplots\n        return True\n\n    def NPC_offers(self, camp):\n        mylist = list()\n        #: npc_offers\n        return mylist\n\n    #: plot_methods\n\n\n\n"
    },
    "name": "Add Tavern",
    "display_name": "Tavern: {tavern_name}",
    "desc": "Adds a tavern and associated content to the city. Leave shop_name and/or npc_name blank for random names.",
    "is_new_branch": true,
    "vars": {
      "tavern_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "interior_tags": {
        "default_val": [
          "gears.tags.SCENE_PUBLIC"
        ],
        "var_type": "scene_tags"
      },
      "npc_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "room_name": {
        "default_val": "Foyer",
        "var_type": "literal"
      },
      "door_sign": {
        "default_val": "None",
        "var_type": "door_sign"
      }
    },
    "child_types": [
      "SCENE_FEATURE",
      "ROOM_FEATURE",
      "NPC_FEATURE"
    ],
    "elements": {
      "LOCALE": {
        "e_type": "scene",
        "name": "Tavern: {tavern_name}",
        "aliases": [
          "PARENT_SCENE"
        ]
      },
      "ROOM": {
        "e_type": "room",
        "name": "Room: {room_name}"
      },
      "NPC": {
        "e_type": "npc",
        "name": "Bartender: {npc_name}"
      }
    },
    "physicals": [
      {
        "element_key": "LOCALE",
        "parent": "METROSCENE",
        "variable_keys": [
          "tavern_name",
          "door_sign",
          "interior_tags"
        ],
        "child_types": [
          "SCENE_FEATURE"
        ]
      },
      {
        "element_key": "ROOM",
        "parent": "LOCALE",
        "variable_keys": [
          "room_name"
        ],
        "child_types": [
          "ROOM_FEATURE"
        ]
      },
      {
        "element_key": "NPC",
        "parent": "ROOM",
        "variable_keys": [
          "npc_name"
        ],
        "child_types": [
          "NPC_FEATURE"
        ]
      }
    ]
  },
  {
    "label": "CITY_FEATURE",
    "scripts": {
      "scenario_build": "splot = self.add_sub_plot(nart, \"TOWNHALL\", elements=dict(LOCALE=the_world[{METROSCENE_UID}], METROSCENE=the_world[{METROSCENE_UID}], METRO=the_world[{METROSCENE_UID}].metrodat, MISSION_GATE=the_world[{MISSION_GATE_UID}], CITY_COLORS={city_palette}, LEADER_NAME={npc_name}, LEADER_JOB={npc_job}, HALL_NAME={hall_name}, DOOR_SIGN={door_sign}, HALL_FACTION={hall_faction}))\n+add_physical LOCALE splot.elements[\"INTERIOR\"]\n+add_physical ROOM splot.elements[\"FOYER\"]\n+add_physical NPC splot.elements[\"LEADER\"]\n\n",
      "plot_init": "+subplot TOWNHALL_{unique_id}_{_uid}\n\n",
      "main": "class TownHall_{unique_id}_{_uid}( Plot ):\n    LABEL = \"TOWNHALL_{unique_id}_{_uid}\"\n    active = True\n    scope = \"LOCALE\"\n    #: plot_properties\n\n    def custom_init( self, nart ):\n        +init_plot\n        #: plot_init\n        #: plot_actions\n        #: plot_subplots\n        return True\n\n    def NPC_offers(self, camp):\n        mylist = list()\n        #: npc_offers\n        return mylist\n\n    #: plot_methods\n\n\n\n"
    },
    "name": "Add Town Hall",
    "display_name": "Town Hall: {hall_name}",
    "desc": "Adds a town hall with a leader NPC to the city. Leave shop_name and/or npc_name blank for random names.",
    "is_new_branch": true,
    "vars": {
      "hall_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "npc_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "npc_job": {
        "default_val": null,
        "var_type": "job",
        "tooltip": "Set None for random job"
      },
      "room_name": {
        "default_val": "Foyer",
        "var_type": "literal"
      },
      "hall_faction": {
        "default_val": null,
        "var_type": "faction"
      },
      "door_sign": {
        "default_val": "None",
        "var_type": "door_sign"
      }
    },
    "child_types": [
      "SCENE_FEATURE",
      "ROOM_FEATURE",
      "NPC_FEATURE"
    ],
    "elements": {
      "LOCALE": {
        "e_type": "scene",
        "name": "Town Hall: {hall_name}",
        "aliases": [
          "PARENT_SCENE"
        ]
      },
      "ROOM": {
        "e_type": "room",
        "name": "Room: {room_name}"
      },
      "NPC": {
        "e_type": "npc",
        "name": "Leader: {npc_name}"
      }
    },
    "physicals": [
      {
        "element_key": "LOCALE",
        "parent": "METROSCENE",
        "variable_keys": [
          "hall_name",
          "hall_faction",
          "door_sign"
        ],
        "child_types": [
          "SCENE_FEATURE"
        ]
      },
      {
        "element_key": "ROOM",
        "parent": "LOCALE",
        "variable_keys": [
          "room_name"
        ],
        "child_types": [
          "ROOM_FEATURE"
        ]
      },
      {
        "element_key": "NPC",
        "parent": "ROOM",
        "variable_keys": [
          "npc_name",
          "npc_job"
        ],
        "child_types": [
          "NPC_FEATURE"
        ]
      }
    ],
    "singular": true
  },
  {
    "label": "CITY_FEATURE",
    "scripts": {
      "scenario_build": "splot = self.add_sub_plot(nart, \"EMPTY_BUILDING\", elements=dict(LOCALE=the_world[{METROSCENE_UID}], METROSCENE=the_world[{METROSCENE_UID}], METRO=the_world[{METROSCENE_UID}].metrodat, MISSION_GATE=the_world[{MISSION_GATE_UID}], CITY_COLORS={city_palette}, INTERIOR_NAME={interior_name}, INTERIOR_TAGS={interior_tags}, DOOR_SIGN={door_sign}, DOOR_TYPE={door_type}, INTERIOR_FACTION={interior_faction}, EXTERIOR_TERRSET={exterior_terrset}, INTERIOR_ARCHITECTURE={interior_architecture}, INTERIOR_DECOR={interior_decor}))\n+add_physical LOCALE splot.elements[\"INTERIOR\"]\n+add_physical ROOM splot.elements[\"FOYER\"]\n\n",
      "plot_init": "+subplot EMPTYBUILDING_{unique_id}_{_uid}\n\n",
      "main": "class EmptyBuilding_{unique_id}_{_uid}( Plot ):\n    LABEL = \"EMPTYBUILDING_{unique_id}_{_uid}\"\n    active = True\n    scope = \"LOCALE\"\n    #: plot_properties\n\n    def custom_init( self, nart ):\n        +init_plot\n        #: plot_init\n        #: plot_actions\n        #: plot_subplots\n        return True\n\n    #: plot_methods\n\n\n\n"
    },
    "name": "Add Empty Building",
    "display_name": "Building: {interior_name}",
    "desc": "Adds an empty building to the city.",
    "is_new_branch": true,
    "vars": {
      "interior_name": {
        "default_val": "Building",
        "var_type": "literal",
        "must_be_defined": true
      },
      "interior_tags": {
        "default_val": [
          "gears.tags.SCENE_PUBLIC"
        ],
        "var_type": "scene_tags"
      },
      "room_name": {
        "default_val": "Foyer",
        "var_type": "literal"
      },
      "interior_faction": {
        "default_val": null,
        "var_type": "faction"
      },
      "door_sign": {
        "default_val": "None",
        "var_type": "door_sign"
      },
      "door_type": {
        "default_val": "ghwaypoints.ScrapIronDoor",
        "var_type": "door_type",
        "must_be_defined": true
      },
      "exterior_terrset": {
        "default_val": "ghterrain.BrickBuilding",
        "var_type": "building_terrset",
        "must_be_defined": true
      },
      "interior_architecture": {
        "default_val": "gharchitecture.DefaultBuilding",
        "var_type": "interior_architecture",
        "must_be_defined": true
      },
      "interior_decor": {
        "default_val": null,
        "var_type": "interior_decor"
      }
    },
    "child_types": [
      "SCENE_FEATURE",
      "ROOM_FEATURE"
    ],
    "elements": {
      "LOCALE": {
        "e_type": "scene",
        "name": "Building: {interior_name}",
        "aliases": [
          "PARENT_SCENE"
        ]
      },
      "ROOM": {
        "e_type": "room",
        "name": "Room: {room_name}"
      }
    },
    "physicals": [
      {
        "element_key": "LOCALE",
        "parent": "METROSCENE",
        "variable_keys": [
          "interior_name",
          "interior_tags",
          "interior_faction",
          "door_sign",
          "door_type",
          "exterior_terrset",
          "interior_architecture",
          "interior_decor"
        ],
        "child_types": [
          "SCENE_FEATURE"
        ]
      },
      {
        "element_key": "ROOM",
        "parent": "LOCALE",
        "variable_keys": [
          "room_name"
        ],
        "child_types": [
          "ROOM_FEATURE"
        ]
      }
    ]
  },
  {
    "label": "CITY_FEATURE",
    "scripts": {
      "scenario_build": "splot = self.add_sub_plot(nart, \"OFFICE_BUILDING\", elements=dict(LOCALE=the_world[{METROSCENE_UID}], METROSCENE=the_world[{METROSCENE_UID}], METRO=the_world[{METROSCENE_UID}].metrodat, MISSION_GATE=the_world[{MISSION_GATE_UID}], CITY_COLORS={city_palette}, INTERIOR_NAME={interior_name}, INTERIOR_TAGS={interior_tags}, DOOR_SIGN={door_sign}, DOOR_TYPE={door_type}, INTERIOR_FACTION={interior_faction}, EXTERIOR_TERRSET={exterior_terrset}, INTERIOR_ARCHITECTURE={interior_architecture}, INTERIOR_DECOR={interior_decor}))\n+add_physical LOCALE splot.elements[\"INTERIOR\"]\n+add_physical ROOM splot.elements[\"FOYER\"]\n\n",
      "plot_init": "+subplot OFFICEBUILDING_{unique_id}_{_uid}\n\n",
      "main": "class OfficeBuilding_{unique_id}_{_uid}( Plot ):\n    LABEL = \"OFFICEBUILDING_{unique_id}_{_uid}\"\n    active = True\n    scope = \"LOCALE\"\n    #: plot_properties\n\n    def custom_init( self, nart ):\n        +init_plot\n        #: plot_init\n        #: plot_actions\n        #: plot_subplots\n        return True\n\n    #: plot_methods\n\n\n\n"
    },
    "name": "Add Office Building",
    "display_name": "Office: {interior_name}",
    "desc": "Adds an empty office building to the city. Also useful for apartments!",
    "is_new_branch": true,
    "vars": {
      "interior_name": {
        "default_val": "Office",
        "var_type": "literal",
        "must_be_defined": true
      },
      "interior_tags": {
        "default_val": [
          "gears.tags.SCENE_PUBLIC"
        ],
        "var_type": "scene_tags"
      },
      "room_name": {
        "default_val": "Foyer",
        "var_type": "literal"
      },
      "interior_faction": {
        "default_val": null,
        "var_type": "faction"
      },
      "door_sign": {
        "default_val": "None",
        "var_type": "door_sign"
      },
      "door_type": {
        "default_val": "ghwaypoints.ScrapIronDoor",
        "var_type": "door_type",
        "must_be_defined": true
      },
      "exterior_terrset": {
        "default_val": "ghterrain.BrickBuilding",
        "var_type": "building_terrset",
        "must_be_defined": true
      },
      "interior_architecture": {
        "default_val": "gharchitecture.DefaultBuilding",
        "var_type": "interior_architecture",
        "must_be_defined": true
      },
      "interior_decor": {
        "default_val": null,
        "var_type": "interior_decor"
      }
    },
    "child_types": [
      "SCENE_FEATURE",
      "ROOM_FEATURE"
    ],
    "elements": {
      "LOCALE": {
        "e_type": "scene",
        "name": "Office: {interior_name}",
        "aliases": [
          "PARENT_SCENE"
        ]
      },
      "ROOM": {
        "e_type": "room",
        "name": "Room: {room_name}"
      }
    },
    "physicals": [
      {
        "element_key": "LOCALE",
        "parent": "METROSCENE",
        "variable_keys": [
          "interior_name",
          "interior_tags",
          "interior_faction",
          "door_sign",
          "door_type",
          "exterior_terrset",
          "interior_architecture",
          "interior_decor"
        ],
        "child_types": [
          "SCENE_FEATURE"
        ]
      },
      {
        "element_key": "ROOM",
        "parent": "LOCALE",
        "variable_keys": [
          "room_name"
        ],
        "child_types": [
          "ROOM_FEATURE"
        ]
      }
    ]
  },
  {
    "label": "CITY_FEATURE",
    "scripts": {
      "scenario_build": "splot = self.add_sub_plot(nart, \"MILITARY_TENT\", elements=dict(LOCALE=the_world[{METROSCENE_UID}], METROSCENE=the_world[{METROSCENE_UID}], METRO=the_world[{METROSCENE_UID}].metrodat, MISSION_GATE=the_world[{MISSION_GATE_UID}], TENT_NAME={tent_name}, TENT_FACTION={tent_faction}, INTERIOR_TAGS={scene_attributes}))\n+add_physical LOCALE splot.elements[\"INTERIOR\"]\n+add_physical ROOM splot.elements[\"FOYER\"]\n\n",
      "plot_init": "+subplot MILTENT_{unique_id}_{_uid}\n\n",
      "main": "class MilitaryTent_{unique_id}_{_uid}( Plot ):\n    LABEL = \"MILTENT_{unique_id}_{_uid}\"\n    active = True\n    scope = \"LOCALE\"\n    #: plot_properties\n\n    def custom_init( self, nart ):\n        +init_plot\n        #: plot_init\n        #: plot_actions\n        #: plot_subplots\n        return True\n\n    #: plot_methods\n\n\n\n"
    },
    "name": "Add Military Tent",
    "display_name": "Tent: {tent_name}",
    "desc": "Adds a military-style tent and an interior. Leave tent_name blank for random names.",
    "is_new_branch": true,
    "vars": {
      "tent_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "room_name": {
        "default_val": "Foyer",
        "var_type": "literal"
      },
      "tent_faction": {
        "default_val": null,
        "var_type": "faction"
      },
      "scene_attributes": {
        "default_val": [
          "gears.tags.SCENE_PUBLIC"
        ],
        "var_type": "scene_tags"
      }
    },
    "child_types": [
      "SCENE_FEATURE",
      "ROOM_FEATURE"
    ],
    "elements": {
      "LOCALE": {
        "e_type": "scene",
        "name": "Tent: {tent_name}",
        "aliases": [
          "PARENT_SCENE"
        ]
      },
      "ROOM": {
        "e_type": "room",
        "name": "Room: {room_name}"
      }
    },
    "physicals": [
      {
        "element_key": "LOCALE",
        "parent": "METROSCENE",
        "variable_keys": [
          "tent_name",
          "tent_faction",
          "scene_attributes"
        ],
        "child_types": [
          "SCENE_FEATURE"
        ]
      },
      {
        "element_key": "ROOM",
        "parent": "LOCALE",
        "variable_keys": [
          "room_name"
        ],
        "child_types": [
          "ROOM_FEATURE"
        ]
      }
    ]
  },
  {
    "label": "CITY_FEATURE",
    "scripts": {
      "scenario_build": "splot = self.add_sub_plot(nart, \"MOBILE_HQ\", elements=dict(LOCALE=the_world[{METROSCENE_UID}], METROSCENE=the_world[{METROSCENE_UID}], METRO=the_world[{METROSCENE_UID}].metrodat, MISSION_GATE=the_world[{MISSION_GATE_UID}], HQ_NAME={hq_name}, HQ_FACTION={hq_faction}))\n+add_physical LOCALE splot.elements[\"INTERIOR\"]\n+add_physical ROOM splot.elements[\"FOYER\"]\n\n",
      "plot_init": "+subplot MOBILEHQ_{unique_id}_{_uid}\n\n",
      "main": "class MobileHQ_{unique_id}_{_uid}( Plot ):\n    LABEL = \"MOBILEHQ_{unique_id}_{_uid}\"\n    active = True\n    scope = \"LOCALE\"\n    #: plot_properties\n\n    def custom_init( self, nart ):\n        +init_plot\n        #: plot_init\n        #: plot_actions\n        #: plot_subplots\n        return True\n\n    #: plot_methods\n\n\n\n"
    },
    "name": "Add Mobile HQ",
    "display_name": "HQ: {hq_name}",
    "desc": "Adds a mobile HQ and an interior. Leave hq_name blank for random names.",
    "is_new_branch": true,
    "vars": {
      "hq_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "room_name": {
        "default_val": "Foyer",
        "var_type": "literal"
      },
      "hq_faction": {
        "default_val": null,
        "var_type": "faction"
      }
    },
    "child_types": [
      "SCENE_FEATURE",
      "ROOM_FEATURE"
    ],
    "elements": {
      "LOCALE": {
        "e_type": "scene",
        "name": "HQ: {hq_name}",
        "aliases": [
          "PARENT_SCENE"
        ]
      },
      "ROOM": {
        "e_type": "room",
        "name": "Room: {room_name}"
      }
    },
    "physicals": [
      {
        "element_key": "LOCALE",
        "parent": "METROSCENE",
        "variable_keys": [
          "hq_name",
          "hq_faction"
        ],
        "child_types": [
          "SCENE_FEATURE"
        ]
      },
      {
        "element_key": "ROOM",
        "parent": "LOCALE",
        "variable_keys": [
          "room_name"
        ],
        "child_types": [
          "ROOM_FEATURE"
        ]
      }
    ]
  },
  {
    "label": "CITY_FEATURE",
    "scripts": {
      "scenario_build": "splot = self.add_sub_plot(nart, \"FIELD_HOSPITAL\", elements=dict(LOCALE=the_world[{METROSCENE_UID}], METROSCENE=the_world[{METROSCENE_UID}], METRO=the_world[{METROSCENE_UID}].metrodat, MISSION_GATE=the_world[{MISSION_GATE_UID}], HQ_NAME={hq_name}, HQ_FACTION={hq_faction}, NPC_NAME={npc_name}))\n+add_physical LOCALE splot.elements[\"INTERIOR\"]\n+add_physical ROOM splot.elements[\"FOYER\"]\n+add_physical NPC splot.elements[\"MEDIC\"]\n\n",
      "plot_init": "+subplot FIELDHOSPITAL_{unique_id}_{_uid}\n\n",
      "main": "class MobileHQ_{unique_id}_{_uid}( Plot ):\n    LABEL = \"FIELDHOSPITAL_{unique_id}_{_uid}\"\n    active = True\n    scope = \"LOCALE\"\n    #: plot_properties\n\n    def custom_init( self, nart ):\n        +init_plot\n        #: plot_init\n        #: plot_actions\n        #: plot_subplots\n        return True\n\n    #: plot_methods\n\n\n\n"
    },
    "name": "Add Field Hospital",
    "display_name": "FHospital: {hq_name}",
    "desc": "Adds a field hospital and an interior. Leave hq_name blank for random names.",
    "is_new_branch": true,
    "vars": {
      "hq_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "room_name": {
        "default_val": "Foyer",
        "var_type": "literal"
      },
      "npc_name": {
        "default_val": "",
        "var_type": "literal",
        "tooltip": "Leave blank for random name"
      },
      "hq_faction": {
        "default_val": null,
        "var_type": "faction"
      }
    },
    "child_types": [
      "SCENE_FEATURE",
      "ROOM_FEATURE",
      "NPC_FEATURE"
    ],
    "elements": {
      "LOCALE": {
        "e_type": "scene",
        "name": "FHospital: {hq_name}",
        "aliases": [
          "PARENT_SCENE"
        ]
      },
      "ROOM": {
        "e_type": "room",
        "name": "Room: {room_name}"
      },
      "NPC": {
        "e_type": "npc",
        "name": "Medic: {npc_name}"
      }
    },
    "physicals": [
      {
        "element_key": "LOCALE",
        "parent": "METROSCENE",
        "variable_keys": [
          "hq_name",
          "hq_faction"
        ],
        "child_types": [
          "SCENE_FEATURE"
        ]
      },
      {
        "element_key": "ROOM",
        "parent": "LOCALE",
        "variable_keys": [
          "room_name"
        ],
        "child_types": [
          "ROOM_FEATURE"
        ]
      },
      {
        "element_key": "NPC",
        "parent": "ROOM",
        "variable_keys": [
          "npc_name"
        ],
        "child_types": [
          "NPC_FEATURE"
        ]
      }
    ]
  },
  {
    "label": "CITY_FEATURE",
    "scripts": {
      "plot_init": "+subplot LOCAL_PROBLEM PROBLEM{_uid}\n\n",
      "plot_methods": "def PROBLEM{_uid}_WIN(self, camp):\n    camp.campdata[LOCAL_PROBLEMS_SOLVED] += 1\n\n\n\n"
    },
    "name": "Add Local Problem",
    "desc": "Adds a Local Problem plot to this location.",
    "singular": true
  },
  {
    "label": "CITY_FEATURE",
    "scripts": {
      "plot_init": "for t in range({num_residents}):\n    +subplot ADD_BORING_NPC\n\n\n\n"
    },
    "name": "Add Random City Residents",
    "desc": "Adds a number of random city residents to this location.",
    "singular": true,
    "vars": {
      "num_residents": {
        "default_val": 3,
        "var_type": "integer"
      }
    }
  }
]