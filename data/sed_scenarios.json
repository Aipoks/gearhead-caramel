[
  {
    "label": "SCENARIO",
    "scripts": {
      "main": "import gears\nfrom pbge.plots import Plot, Adventure, PlotState\nimport pbge\nfrom pbge.dialogue import Offer, ContextTag\nfrom game import teams, ghdialogue, services\nfrom game.ghdialogue import context\nimport pygame\nimport random\nfrom game.content.ghwaypoints import Exit\nfrom game.content.plotutility import AdventureModuleData\nimport game\nfrom game.content import plotutility, ghwaypoints, gharchitecture, GHNarrativeRequest, ghterrain\nfrom game.memobrowser import Memo\nfrom game.content.ghplots import missionbuilder\n#: includes\n\nTHE_WORLD = \"SCENARIO_ELEMENT_UIDS\"\n\nclass {unique_id}_Scenario( Plot ):\n    LABEL = \"SCENARIO_{unique_id}\"\n    active = True\n    scope = True\n\n    ADVENTURE_MODULE_DATA = AdventureModuleData(\n        \"{adventure_name}\",\n        \"{adventure_desc}\",\n        {adventure_date}, {adventure_cover},\n    )\n\n    def custom_init( self, nart ):\n        self.ADVENTURE_MODULE_DATA.apply(nart.camp)\n\n        if {adventure_threat} > 0:\n            self.rank = {adventure_threat}\n        else:\n            self.rank = nart.camp.renown\n        #:scenario_init\n\n        self.build_world(nart)\n\n        #:scenario_subplots\n\n        # Handle the entry and lancemate stuff here.\n        entry_point = nart.camp.campdata[THE_WORLD].get({starting_point})\n        nart.camp.go(entry_point)\n        if {start_with_lancemate}:\n            self.add_sub_plot(nart, \"ADD_INSTANT_EGG_LANCEMATE\", necessary=False)\n\n        return True\n\n    def build_world(self, nart):\n        # When adding physical things to the world, do that here instead of inside your individual plots. That way,\n        # all the physical objects in the world get defined before individual plots get loaded and the elements they\n        # define can be grabbed from THE_WORLD campaign variable.\n        the_world = dict()\n        nart.camp.campdata[THE_WORLD] = the_world\n\n        #:scenario_build\n\n    #: world_methods\n\n\n\n"
    },
    "name": "Scenario",
    "display_name": "Scenario {adventure_name}",
    "desc": "The base plot brick for creating an adventure module.",
    "vars": {
      "adventure_name": {
        "default_val": "Adventure!",
        "var_type": "string"
      },
      "adventure_desc": {
        "default_val": "Go fight some pirates.",
        "var_type": "text"
      },
      "adventure_date": {
        "default_val": "(158, 5, 10)",
        "var_type": "date"
      },
      "unique_id": {
        "default_val": "",
        "var_type": "string"
      },
      "adventure_threat": {
        "default_val": 0,
        "var_type": "integer"
      },
      "adventure_cover": {
        "default_val": null,
        "var_type": "VHS_*.png"
      },
      "starting_point": {
        "default_val": null,
        "var_type": "physical:gate"
      },
      "start_with_lancemate": {
        "default_val": true,
        "var_type": "boolean"
      }
    },
    "child_types": [
      "CITY",
      "WORLD_FEATURE"
    ]
  },
  {
    "label": "WORLD_FEATURE",
    "scripts": {
      "scenario_init": "self.register_element( \\\"FACTION_{_uid}\\\", gears.factions.Circle(nart.camp, parent_faction={base_faction}, name=\\\"{faction_name}\\\"))\n\n\n\n"
    },
    "name": "New Sub Faction",
    "display_name": "Faction: {faction_name}",
    "desc": "Adds a new sub-faction to a world.",
    "vars": {
      "faction_name": {
        "default_val": "the Them",
        "var_type": "string"
      },
      "base_faction": {
        "default_val": null,
        "var_type": "faction"
      }
    },
    "elements": {
      "FACTION_{_uid}": {
        "e_type": "faction",
        "name": "{faction_name}"
      }
    },
    "sorting_rank": 100
  },
  {
    "label": "WORLD_FEATURE",
    "scripts": {
      "scenario_init": "nart.camp.campdata[\\\"{var_name}\\\"] = {value}\n\n\n\n"
    },
    "name": "New Campaign Variable",
    "display_name": "Define {var_name} = {value}",
    "desc": "Define a campaign variable.",
    "vars": {
      "var_name": {
        "var_type": "campaign_variable",
        "default_val": "x"
      },
      "value": {
        "default_val": 0,
        "var_type": "integer"
      }
    },
    "sorting_rank": 200
  },
  {
    "label": "WORLD_FEATURE",
    "scripts": {
      "scenario_init": "nart.camp.num_lancemates = {lancemate_slots}\nself.add_sub_plot(nart, \"CF_STANDARD_LANCEMATE_HANDLER\", elements=dict(LANCEDEV_ENABLED={lancemate_development}))\n\n\n\n"
    },
    "name": "Standard Lancemate Handler",
    "desc": "Adds the regular Lancemate handling scripts: an NPC can join your party if they have the lancemate tag; you can ask lancemates to leave if you are in a public scene; you can have a number of lancemates defined by the campaign..",
    "vars": {
      "lancemate_slots": {
        "default_val": 3,
        "var_type": "integer"
      },
      "lancemate_development": {
        "default_val": true,
        "var_type": "boolean"
      }
    },
    "singular": true,
    "sorting_rank": 300
  },
  {
    "label": "WORLD_FEATURE",
    "scripts": {
      "scenario_init": "self.add_sub_plot(nart, \\\"ADD_FROZEN_COMBATANT\\\", elements=dict(FACTION={npc_faction}))\n"
    },
    "name": "Add Frozen Combatant",
    "desc": "Add a random faction member who starts the game in cold storage. This NPC may be encountered during missions and other plots that use a global character search.",
    "vars": {
      "npc_faction": {
        "default_val": null,
        "var_type": "faction"
      }
    },
    "sorting_rank": 2000
  }
]